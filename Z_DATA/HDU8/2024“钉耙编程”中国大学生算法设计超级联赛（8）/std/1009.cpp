#include<bits/stdc++.h>
using namespace std;
const long long mod=1000000007;
int a[50],vis[50],psum[51];
int main(){
	ios::sync_with_stdio(false),cin.tie(0);
	int T,n,i,j,x1,y1,x2,y2;
	long long ans,cans,cvl,cnt;
	for(cin>>T;T>0;T--)
	{
		cin>>n;
		for(i=0;i<n;i++)vis[i]=0;
		for(i=0;i<n;i++)
		{
			cin>>a[i];
			if(a[i]!=-1)
			{
				a[i]--;
				vis[a[i]]=1;
			}
		}
		psum[0]=0;
		for(i=0;i<n;i++)psum[i+1]=psum[i]+1-vis[i];
		ans=0;
		for(x1=0;x1<n;x1++)
		{
			for(y1=0;y1<n;y1++)
			{
				for(x2=x1+1;x2<n;x2++)
				{
					for(y2=0;y2<n;y2++)
					{
						if(a[x1]!=-1&&a[x1]!=y1)continue;
						if(a[x1]==-1&&vis[y1])continue;
						if(a[x2]!=-1&&a[x2]!=y2)continue;
						if(a[x2]==-1&&vis[y2])continue;
						if(y1==y2)continue;
						cans=1;
						j=0;
						cnt=0;
						if(y1<y2)
						{
							for(i=0;i<n;i++)
							{
								if(i==x1||i==x2)continue;
								if(i<x1||i>x2)
								{
									for(;j<n&&(x1-i)*(y2-j)-(x2-i)*(y1-j)<0;j++);
								}
								else
								{
									for(;j<n&&(x1-i)*(y2-j)-(x2-i)*(y1-j)<=0;j++);
								}
								if(a[i]!=-1&&a[i]>=j)
								{
									cans=0;
									break;
								}
								if(a[i]!=-1)continue;
								cvl=psum[j];
								if(j>y1&&a[x1]==-1)cvl--;
								if(j>y2&&a[x2]==-1)cvl--;
								cans=(cans*max(cvl-cnt,0LL))%mod;
								cnt++;
							}
						}
						else
						{
							for(i=n-1;i>-1;i--)
							{
								if(i==x1||i==x2)continue;
								if(i<x1||i>x2)
								{
									for(;j<n&&(x1-i)*(y2-j)-(x2-i)*(y1-j)<0;j++);
								}
								else
								{
									for(;j<n&&(x1-i)*(y2-j)-(x2-i)*(y1-j)<=0;j++);
								}
								if(a[i]!=-1&&a[i]>=j)
								{
									cans=0;
									break;
								}
								if(a[i]!=-1)continue;
								cvl=psum[j];
								if(j>y1&&a[x1]==-1)cvl--;
								if(j>y2&&a[x2]==-1)cvl--;
								cans=(cans*max(cvl-cnt,0LL))%mod;
								cnt++;
							}
						}
						ans=(ans+cans*(y1+y2)%mod*(x2-x1)%mod*(mod-mod/2))%mod;
						cans=1;
						j=n-1;
						cnt=0;
						if(y1>y2)
						{
							for(i=0;i<n;i++)
							{
								if(i==x1||i==x2)continue;
								if(i<x1||i>x2)
								{
									for(;j>-1&&(x1-i)*(y2-j)-(x2-i)*(y1-j)>0;j--);
								}
								else
								{
									for(;j>-1&&(x1-i)*(y2-j)-(x2-i)*(y1-j)>=0;j--);
								}
								if(a[i]!=-1&&a[i]<=j)
								{
									cans=0;
									break;
								}
								if(a[i]!=-1)continue;
								cvl=psum[n]-psum[j+1];
								if(j<y1&&a[x1]==-1)cvl--;
								if(j<y2&&a[x2]==-1)cvl--;
								cans=(cans*max(cvl-cnt,0LL))%mod;
								cnt++;
							}
						}
						else
						{
							for(i=n-1;i>-1;i--)
							{
								if(i==x1||i==x2)continue;
								if(i<x1||i>x2)
								{
									for(;j>-1&&(x1-i)*(y2-j)-(x2-i)*(y1-j)>0;j--);
								}
								else
								{
									for(;j>-1&&(x1-i)*(y2-j)-(x2-i)*(y1-j)>=0;j--);
								}
								if(a[i]!=-1&&a[i]<=j)
								{
									cans=0;
									break;
								}
								if(a[i]!=-1)continue;
								cvl=psum[n]-psum[j+1];
								if(j<y1&&a[x1]==-1)cvl--;
								if(j<y2&&a[x2]==-1)cvl--;
								cans=(cans*max(cvl-cnt,0LL))%mod;
								cnt++;
							}
						}
						ans=(ans+mod-cans*(y1+y2)%mod*(x2-x1)%mod*(mod-mod/2)%mod)%mod;
					}
				}
			}
		}
		cout<<ans<<'\n';
	}
	return 0;
}
